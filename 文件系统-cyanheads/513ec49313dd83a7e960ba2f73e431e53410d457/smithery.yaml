startCommand:
  type: stdio
  configSchema:
    type: object
    properties:
      MCP_TRANSPORT_TYPE:
        type: string
        enum: ["stdio", "http"]
        default: "stdio"
        description: "MCP communication transport ('stdio' or 'http')."
      MCP_HTTP_PORT:
        type: integer
        default: 3010
        description: "HTTP server port (if MCP_TRANSPORT_TYPE is 'http')."
      MCP_LOG_LEVEL:
        type: string
        default: "debug" # Default from src/config/index.ts
        description: "Minimum logging level (e.g., 'debug', 'info', 'warn', 'error')."
      LOGS_DIR:
        type: string
        default: "./logs"
        description: "Directory for log files. Relative to project root."
      FS_BASE_DIRECTORY:
        type: string
        default: ""
        description: "Optional base directory for all filesystem operations. If set, tools cannot access paths outside this directory. Must be an absolute path if provided."
      # Add other relevant env vars from src/config/index.ts if they should be configurable via Smithery
      # For example, MCP_HTTP_HOST, MCP_ALLOWED_ORIGINS, MCP_AUTH_SECRET_KEY could be added here
      # if they need to be set dynamically when the server is started by Smithery.
      # For now, keeping it simple with the core ones.
  commandFunction: |
    (config) => ({
      "command": "node",
      "args": ["dist/index.js"],
      "env": {
        "MCP_TRANSPORT_TYPE": config.MCP_TRANSPORT_TYPE,
        "MCP_HTTP_PORT": String(config.MCP_HTTP_PORT), // Ensure port is a string for env
        "MCP_LOG_LEVEL": config.MCP_LOG_LEVEL,
        "LOGS_DIR": config.LOGS_DIR,
        "FS_BASE_DIRECTORY": config.FS_BASE_DIRECTORY
        // Map other configured env vars here if added to configSchema
      }
    })
